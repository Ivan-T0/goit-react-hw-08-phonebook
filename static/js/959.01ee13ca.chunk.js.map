{"version":3,"file":"static/js/959.01ee13ca.chunk.js","mappings":"+QASe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAiBXC,GAASC,EAAAA,EAAAA,IAAO,CACpBC,MAAMC,EAAAA,EAAAA,MAASC,WACfC,OAAOF,EAAAA,EAAAA,MAASC,WAChBE,UAAUH,EAAAA,EAAAA,MAASI,IAAI,GAAGC,IAAI,IAAIJ,aAEpC,OACEK,EAAAA,EAAAA,KAACC,EAAAA,GAAqB,CAAAC,UACpBF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLC,cAbgB,CACpBX,KAAM,GACNG,MAAO,GACPC,SAAU,IAWNQ,iBAAkBd,EAClBe,SA1Be,SAAHC,EAAAC,GAAkD,IAA5Cf,EAAIc,EAAJd,KAAMG,EAAKW,EAALX,MAAOC,EAAQU,EAARV,SAAcY,EAASD,EAATC,UACjDpB,EACEqB,EAAAA,EAAAA,SAAoB,CAClBjB,KAAAA,EACAG,MAAAA,EACAC,SAAAA,KAGJY,GACF,EAiB6BP,UAEvBS,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,aAAa,MAAKX,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBAEJS,EAAAA,EAAAA,MAAA,SAAOG,QAAQ,OAAMZ,SAAA,CAAC,QAEpBF,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACC,KAAK,OAAOvB,KAAK,UACxBO,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACxB,KAAK,OAAOyB,UAAU,YAEtCP,EAAAA,EAAAA,MAAA,SAAOG,QAAQ,QAAOZ,SAAA,CAAC,SAErBF,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACC,KAAK,QAAQvB,KAAK,WACzBO,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACxB,KAAK,QAAQyB,UAAU,YAEvCP,EAAAA,EAAAA,MAAA,SAAOG,QAAQ,WAAUZ,SAAA,CAAC,YAExBF,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACC,KAAK,WAAWvB,KAAK,cAC5BO,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACxB,KAAK,WAAWyB,UAAU,YAE1ClB,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAACH,KAAK,SAASI,QAAQ,YAAWlB,SAAC,aAG1CF,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,GAAG,SAAQpB,SAAC,uCAK5B,C","sources":["pages/Register/Register.js"],"sourcesContent":["import React from 'react';\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport operations from '../../redux/auth/operations';\nimport { ContainerRegisterForm } from '../../components/App.styled';\nimport Button from '@mui/material/Button';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(\n      operations.register({\n        name,\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  const schema = object({\n    name: string().required(),\n    email: string().required(),\n    password: string().min(6).max(12).required(),\n  });\n  return (\n    <ContainerRegisterForm>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <h2>Registration</h2>\n\n          <label htmlFor=\"name\">\n            Name\n            <Field type=\"name\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\"></ErrorMessage>\n          </label>\n          <label htmlFor=\"email\">\n            Email\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\"></ErrorMessage>\n          </label>\n          <label htmlFor=\"password\">\n            Password\n            <Field type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\"></ErrorMessage>\n          </label>\n          <Button type=\"submit\" variant=\"contained\">\n            Sign In\n          </Button>\n          <Link to=\"/login\">Already registered? Sign In </Link>\n        </Form>\n      </Formik>\n    </ContainerRegisterForm>\n  );\n}"],"names":["Register","dispatch","useDispatch","schema","object","name","string","required","email","password","min","max","_jsx","ContainerRegisterForm","children","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","operations","_jsxs","Form","autoComplete","htmlFor","Field","type","ErrorMessage","component","Button","variant","Link","to"],"sourceRoot":""}