{"version":3,"file":"static/js/711.461044b3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const contactSelector = state => state.contacts;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectItems = state => state.contacts.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectItems],\n  (filter, items) => {\n    const normilizeFilter = filter.toLocaleLowerCase();\n    return items.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normilizeFilter)\n    );\n  }\n);","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { contactSelector } from 'redux/contacts/selectors';\nimport { Report } from 'notiflix';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactFormStyle } from 'components/App.styled';\nimport operationsContacts from 'redux/contacts/contactsOperations';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(contactSelector);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleNameChange = event => {\n    const { name: nameTarget, value } = event.target;\n    switch (nameTarget) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInclude = contacts.items.find(contact => contact.name === name);\n    if (isInclude) {\n      Report.info(name + ' Is already in contacts!');\n      return;\n    }\n    dispatch(operationsContacts.createContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  let nameId = nanoid();\n  let numberId = nanoid();\n  return (\n    <ContactFormStyle>\n      <form onSubmit={handleSubmit} number={number} name={name}>\n        <label className=\"formLabel\" htmlFor={nameId}>\n          Name\n          <input\n            className=\"formInput\"\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleNameChange}\n          />\n        </label>\n        <label className=\"formLabel\" htmlFor={numberId}>\n          Number\n          <input\n            className=\"formInput\"\n            id={numberId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleNameChange}\n          />\n        </label>\n        <button className=\"formBtn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </ContactFormStyle>\n  );\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { filterName } from '../../redux/contacts/slice';\n\nimport { FilterStyle } from '../../components/App.styled';\n// import debounce from 'lodash.debounce';\n// const DEBOUNCE_DELAY = 3000;\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleNameChange = event => {\n    const { value } = event.target;\n    dispatch(filterName(value));\n  };\n  return (\n    <FilterStyle>\n      <label className=\"filtrTitle\">\n        Find contacts by name\n        <input\n          className=\"filterInput\"\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          // onChange={debounce(handleNameChange, DEBOUNCE_DELAY)}\n          onChange={handleNameChange}\n        />\n      </label>\n    </FilterStyle>\n  );\n}","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  contactSelector,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { ContactListStyle } from '../../components/App.styled';\nimport operationsContacts from '../../redux/contacts/contactsOperations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(contactSelector);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const delContact = contactId => {\n    dispatch(operationsContacts.deleteContacts(contactId), [dispatch]);\n  };\n\n  return (\n    <ContactListStyle>\n      <ul>\n        {contacts.isLoading && <p>Loading...</p>}\n        {visibleContacts.map(item => {\n          return (\n            <li className=\"contactItem\" key={item.id}>\n              {item.name}: {item.number}\n              <button\n                className=\"contactBtn\"\n                type=\"button\"\n                onClick={() => delContact(item.id)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </ContactListStyle>\n  );\n};\nexport default ContactList;","import React, { useEffect } from 'react';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { ContactsStyle } from '../../components/App.styled';\n\n//\nimport operationsContacts from '../../redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\n// import operations from 'redux/auth/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operationsContacts.getContacts());\n    // .unwrap()\n    // .catch(() => {\n    //   operations.logOut();\n    // });\n  }, [dispatch]);\n  return (\n    <ContactsStyle>\n      <div\n        style={{\n          height: '100vh',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <div className=\"contactsContainer\">\n          <div>\n            <h1 className=\"title\">Phonebook</h1>\n            <ContactForm />\n          </div>\n          <div>\n            <h2 className=\"subtitle\">Contacts</h2>\n            <Filter />\n            <ContactList />\n          </div>\n        </div>\n      </div>\n    </ContactsStyle>\n  );\n}"],"names":["contactSelector","state","contacts","selectFilter","filter","selectVisibleContacts","createSelector","items","normilizeFilter","toLocaleLowerCase","contact","name","includes","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleNameChange","event","_event$target","target","nameTarget","value","nameId","nanoid","numberId","_jsx","ContactFormStyle","children","_jsxs","onSubmit","preventDefault","find","Report","operationsContacts","className","htmlFor","id","type","pattern","title","required","onChange","Filter","FilterStyle","filterName","visibleContacts","ContactListStyle","isLoading","map","item","onClick","contactId","Contacts","useEffect","ContactsStyle","style","height","display","justifyContent","alignItems","ContactList"],"sourceRoot":""}